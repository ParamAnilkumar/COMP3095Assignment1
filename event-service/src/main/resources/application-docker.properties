spring.application.name=event-service
server.port=8089
kafka.port=broker:29092
service.user-url=http://user-service:8087/api/users/
service.booking-url=http://booking-service:8088/api/bookings/exists/
spring.data.mongodb.host=host.docker.internal
spring.data.mongodb.port=27018
spring.data.mongodb.database=event-service
spring.data.mongodb.username=admin
spring.data.mongodb.password=password
spring.data.mongodb.authentication-database=admin
event-service.version=v1.0
#web bases documentation -http://localhost:port/swagger-ui
springdoc.swagger-ui.path=/swagger-ui
#json based documentation - https://locahost:port/api-docs
springdoc.api-docs.path=/api-docs
# Resilience4j circuit breaker configurations
resilience4j.circuitbreaker.instances.bookingServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.bookingServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.bookingServiceCircuitBreaker.waitDurationInOpenState=5000

resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.userServiceCircuitBreaker.waitDurationInOpenState=5000

# Kafka Properties
# The address of the Kafka broker
spring.kafka.bootstrap-servers=broker:29092
# The default topic where messages will be sent IF NOT explicitly specified
spring.kafka.template.default-topic=event-created
# The serializers class used for serialization the key of the kafka message
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# The serializers class used for serialization the value of message to kafka in JSON format
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
