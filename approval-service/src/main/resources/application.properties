# Application Name
spring.application.name=approval-service
service.event-url=http://localhost:9097/api/events/

# Server Port
server.port=9098

# PostgreSQL Database Configuration for Docker
# Use either the Docker container name or localhost depending on how you're running your application.
#spring.datasource.url=jdbc:postgresql://postgres:5432/postgres
# Uncomment the line below if running locally
spring.datasource.url=jdbc:postgresql://localhost:5434/approval-service
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jps.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

approval-service.version=v1.0
#web bases documentation -http://localhost:port/swagger-ui
springdoc.swagger-ui.path=/swagger-ui
#json based documentation - https://locahost:port/api-docs
springdoc.api-docs.path=/api-docs


management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.eventServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
